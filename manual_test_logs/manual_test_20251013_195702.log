[0;32m🚀 Airis 手動試験開始[0m
開始時刻: 月 10 13 19:57:02 JST 2025
ログファイル: manual_test_logs/manual_test_20251013_195702.log
結果ファイル: manual_test_logs/manual_test_results_20251013_195702.json

[1;33m🤖 AIエンジン選択システム試験開始[0m

[0;34m============================================================[0m
[0;34mテスト実行: AI-001 - デフォルトエンジン設定[0m
[0;34mコマンド: ai engine set default gemini[0m
[0;34m============================================================[0m
[0;32m結果: ✅ PASS (2秒)[0m

[0;34m============================================================[0m
[0;34mテスト実行: AI-002 - タスク別エンジン設定[0m
[0;34mコマンド: ai engine set task code_generation cursor[0m
[0;34m============================================================[0m
[0;32m結果: ✅ PASS (1秒)[0m

[0;34m============================================================[0m
[0;34mテスト実行: AI-003 - エンジン情報表示[0m
[0;34mコマンド: ai engine info[0m
[0;34m============================================================[0m
[0;32m結果: ✅ PASS (1秒)[0m

[0;34m============================================================[0m
[0;34mテスト実行: AI-004 - 設定保存[0m
[0;34mコマンド: ai engine save[0m
[0;34m============================================================[0m
[0;31m結果: ❌ FAIL (1秒)[0m

[0;34m============================================================[0m
[0;34mテスト実行: AI-006 - コンプライアンスモード有効化[0m
[0;34mコマンド: ai engine enable compliance gemini local[0m
[0;34m============================================================[0m
[0;32m結果: ✅ PASS (1秒)[0m

[0;34m============================================================[0m
[0;34mテスト実行: AI-007 - 制限されたエンジンでのタスク実行[0m
[0;34mコマンド: code generate hello world[0m
[0;34m============================================================[0m
[0;32m結果: ✅ PASS (3秒)[0m

[0;34m============================================================[0m
[0;34mテスト実行: AI-008 - コンプライアンスモード無効化[0m
[0;34mコマンド: ai engine disable compliance[0m
[0;34m============================================================[0m
[0;32m結果: ✅ PASS (2秒)[0m

[0;34m============================================================[0m
[0;34mテスト実行: AI-009 - コスト最適化モード有効化[0m
[0;34mコマンド: ai engine enable cost optimization[0m
[0;34m============================================================[0m
[0;32m結果: ✅ PASS (1秒)[0m

[1;33m🔧 エージェント機能試験開始[0m

[0;34m============================================================[0m
[0;34mテスト実行: CODE-001 - 基本コード生成[0m
[0;34mコマンド: code generate fibonacci function[0m
[0;34m============================================================[0m
[0;32m結果: ✅ PASS (4秒)[0m

[0;34m============================================================[0m
[0;34mテスト実行: CODE-002 - 複雑なコード生成[0m
[0;34mコマンド: code generate web scraper[0m
[0;34m============================================================[0m
[0;31m結果: ❌ FAIL (4秒)[0m

[0;34m============================================================[0m
[0;34mテスト実行: CURSOR-001 - Cursorバージョン確認[0m
[0;34mコマンド: cursor version[0m
[0;34m============================================================[0m
[0;32m結果: ✅ PASS (1秒)[0m

[0;34m============================================================[0m
[0;34mテスト実行: CURSOR-002 - Cursorコード生成[0m
[0;34mコマンド: code generate calculator[0m
[0;34m============================================================[0m
[0;32m結果: ✅ PASS (4秒)[0m

[0;34m============================================================[0m
[0;34mテスト実行: GEMINI-001 - Geminiコード分析[0m
[0;34mコマンド: gemini analyze code[0m
[0;34m============================================================[0m
[0;32m結果: ✅ PASS (1秒)[0m

[0;34m============================================================[0m
[0;34mテスト実行: WEB-001 - 基本Web検索[0m
[0;34mコマンド: search Python best practices[0m
[0;34m============================================================[0m
[0;32m結果: ✅ PASS (12秒)[0m

[0;34m============================================================[0m
[0;34mテスト実行: WEB-002 - 日本語Web検索[0m
[0;34mコマンド: search 機械学習 最新技術[0m
[0;34m============================================================[0m
[0;32m結果: ✅ PASS (12秒)[0m

[0;34m============================================================[0m
[0;34mテスト実行: BROWSE-001 - URL取得[0m
[0;34mコマンド: browse https://github.com[0m
[0;34m============================================================[0m
[0;32m結果: ✅ PASS (9秒)[0m

[0;34m============================================================[0m
[0;34mテスト実行: GIT-001 - Git状態確認[0m
[0;34mコマンド: git status[0m
[0;34m============================================================[0m
[0;32m結果: ✅ PASS (1秒)[0m

[0;34m============================================================[0m
[0;34mテスト実行: GIT-002 - Git自動ワークフロー[0m
[0;34mコマンド: git auto[0m
[0;34m============================================================[0m
[0;32m結果: ✅ PASS (2秒)[0m

[0;34m============================================================[0m
[0;34mテスト実行: SHELL-001 - 基本シェルコマンド[0m
[0;34mコマンド: shell ls -la[0m
[0;34m============================================================[0m
[0;32m結果: ✅ PASS (4秒)[0m

[1;33m📁 プロジェクト管理機能試験開始[0m

[0;34m============================================================[0m
[0;34mテスト実行: PROJ-001 - プロジェクト作成[0m
[0;34mコマンド: create project manual_test_1760353089[0m
[0;34m============================================================[0m
[0;31m結果: ❌ FAIL (9秒)[0m

[0;34m============================================================[0m
[0;34mテスト実行: PROJ-002 - プロジェクト一覧[0m
[0;34mコマンド: list projects[0m
[0;34m============================================================[0m
[0;32m結果: ✅ PASS (1秒)[0m

[1;33m📄 ドキュメント生成機能試験開始[0m

[0;34m============================================================[0m
[0;34mテスト実行: DOC-001 - 要件定義書生成[0m
[0;34mコマンド: generate requirements[0m
[0;34m============================================================[0m
[0;31m結果: ❌ FAIL (5秒)[0m

[0;34m============================================================[0m
[0;34mテスト実行: DOC-002 - 設計書生成[0m
[0;34mコマンド: generate design[0m
[0;34m============================================================[0m
[0;31m結果: ❌ FAIL (3秒)[0m

[0;34m============================================================[0m
[0;34mテスト実行: DOC-003 - README生成[0m
[0;34mコマンド: generate readme[0m
[0;34m============================================================[0m
[0;32m結果: ✅ PASS (3秒)[0m

[1;33m🔗 統合テスト開始[0m

[0;34m============================================================[0m
[0;34mテスト実行: E2E-001 - 完全な開発サイクル[0m
[0;34mコマンド: create project e2e_test_1760353110 && code generate hello world && generate requirements[0m
[0;34m============================================================[0m
[0;32m結果: ✅ PASS (13秒)[0m

[0;34m============================================================[0m
[0;34mテスト実行: E2E-002 - 複数エージェント連携[0m
[0;34mコマンド: search Python tutorial && code generate example[0m
[0;34m============================================================[0m
[0;32m結果: ✅ PASS (12秒)[0m
